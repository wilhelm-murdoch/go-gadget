name: Release Gadget binaries

on:
  release:
    types: [created]

jobs:
  releases-matrix:
    name: Release Go Binary
    env:
      CGO_ENABLED: 0
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          # - {goos: "linux",   goarch: "386",   runson: "ubuntu-latest"}
          # - {goos: "linux",   goarch: "amd64", runson: "ubuntu-latest"}
          # - {goos: "linux",   goarch: "arm",   runson: "ubuntu-latest"}
          # - {goos: "linux",   goarch: "arm64", runson: "ubuntu-latest"}
          # - {goos: "windows", goarch: "386",   runson: "ubuntu-latest"}
          # - {goos: "windows", goarch: "amd64", runson: "ubuntu-latest"}
          - {goos: "darwin",  goarch: "amd64", runson: "macos-latest"}
          # - {goos: "darwin",  goarch: "arm64", runson: "macos-latest"}
    steps:
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date)"
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - uses: wangyoucao577/go-release-action@v1.25
        with:
          goversion: "1.18"
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          project_path: "./cmd/gadget"
          binary_name: "gadget"
          ldflags: "-s -w -X main.Version=${{ github.ref_name }} -X main.Stage=production -X main.Commit=${{ github.sha	}} -X main.Date=${{ steps.date.outputs.date }}"
          build_flags: "-a -installsuffix cgo"
          extra_files: LICENSE.md README.md
          asset_name: "gadget-${{ matrix.goos }}-${{ matrix.goarch }}"